import telebot
from telebot import types
from pymongo import MongoClient
import time

timer = time.localtime()

bot = telebot.TeleBot("951724945:AAGPfKwEp9vM44KXnbr0RsFsRGh1xuiHhc4")

client = MongoClient("mongodb+srv://mergebot:klainer1@mergebot-bnkw8.mongodb.net/mergebot?retryWrites=true&w=majority")
db = client.mergebot

F = 0
Flag = 0
Flagok = 0

@bot.message_handler(commands = ['start'])
def send_welcome(message):
        global Flag
        Flag = 1

        if (message.chat.username == None) and (db.token.count_documents({"id" : message.chat.id}) == 0):
                inline_item2 = types.InlineKeyboardButton('–°–æ–∑–¥–∞–Ω–∏–µ Username', url = 'https://telegram-rus.ru/nik')
                inline_bt2 = types.InlineKeyboardMarkup()
                inline_bt2.add(inline_item2)

                bot.send_message(message.chat.id, "–£ —Ç–µ–±—è –Ω–µ—Ç –Ω–∏–∫–Ω–µ–π–º–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ, –º–Ω–µ –ø—Ä–∏—è—Ç–Ω–µ–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –ª—é–¥—è–º –ø–æ –Ω–∏–∫–∞–º, –∞ –Ω–µ id. \
–ù–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É, —Ç—ã —É–∑–Ω–∞–µ—à—å, –∫–∞–∫ —Å–æ–∑–¥–∞—Ç—å –Ω–∏–∫–Ω–µ–π–º. –ù–æ –µ—Å–ª–∏ —Ç–µ–±—è –≤—Å–µ —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç, —è –Ω–µ –Ω–∞—Å—Ç–∞–∏–≤–∞—é, –º–æ–µ–π —Ä–∞–±–æ—Ç–µ —ç—Ç–æ –Ω–µ –ø–æ–º–µ—à–∞–µ—Ç ü§î", parse_mode = "html", reply_markup = inline_bt2)

        if message.chat.username == None:
                NameUser = str(message.chat.id)
        else:
                NameUser = "@" + message.chat.username

        st = open('qaz/privet.webp', 'rb')
        bot.send_sticker(message.chat.id, st)
        
        if 5 <= timer[3] < 11:
                bot.send_message(message.chat.id, "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ , " + NameUser + "! –ö–∞–∫–∞—è –∂–µ —Ç—ã —Ä–∞–Ω–Ω—è—è –ø—Ç–∞—à–∫–∞, –∞ —è –≤–µ–¥—å –º–æ–≥ –∏ —Å–ø–∞—Ç—å –≤ —ç—Ç–æ –≤—Ä–µ–º—è üòÖ", parse_mode = "html")

        if 11 <= timer[3] < 17:
                bot.send_message(message.chat.id, "–î–æ–±—Ä—ã–π –¥–µ–Ω—å, " + NameUser + "! –ö–∞–∫ –∂–µ —Ç—ã –≤–æ–≤—Ä–µ–º—è —è —Ç–æ–ª—å–∫–æ –≤–µ—Ä–Ω—É–ª—Å—è —Å –æ–±–µ–¥–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–∫—É—Å–∞ ü•ò –ê —Ç—ã –ø–æ–∫—É—à–∞–ª?", parse_mode = "html")

        if 17 <= timer[3] < 23:
                bot.send_message(message.chat.id, "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä, " + NameUser + "! –û–≥–æ —É–∂–µ –≤–µ—á–µ—Ä, —Ç—ã –¥–æ–º–æ–π —Ç–æ –Ω–µ —Å–æ–±–∏—Ä–∞–µ—à—å—Å—è? üåÖ", parse_mode = "html")

        if (timer[3] == 23) or (0 <= timer[3] < 5):
                bot.send_message(message.chat.id, "–î–æ–±—Ä–æ–π –Ω–æ—á–∏... –¥–æ–±—Ä–∞—è –Ω–æ—á—å... –≤ –æ–±—â–µ–º, –ø—Ä–∏–≤–µ—Ç, " + NameUser + "! –¢—ã —á–µ–≥–æ –Ω–µ —Å–ø–∏—à—å, –¥–∞–≤–∞–π –Ω–µ –∑–∞—Å–∏–∂–∏–≤–∞–π—Å—è, —Å–ø–∞—Ç—å - –ø–æ–ª–µ–∑–Ω–æ üò¥", parse_mode = "html")

        if db.token.count_documents({"id" : message.chat.id}) == 1:
                cursor = db.token.find_one({"id" : message.chat.id})
                cur = []
                cursor1 = dict(cursor)
                for j in cursor1['token']:
                        cur.append(j)
                        cur.append('\n')
                stroka = ' '.join(cur)
                
                bot.send_message(message.chat.id, "–ü–æ —Ç–≤–æ–µ–º—É id –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —è –Ω–∞—à–µ–ª —Å–ª–µ–¥—É—é—â–∏–µ TOKEN: " + stroka, parse_mode = "html")

                item1 = types.KeyboardButton("–í–≤–æ–¥ TOKEN")
                markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
                markup.add(item1)
                
                bot.send_message(message.chat.id,"–•–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å TOKEN - –∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–æ—á–∫—É ", parse_mode = "html", reply_markup = markup)
                
        elif db.token.count_documents({"id" : message.chat.id}) > 1:
                bot.send_message(message.chat.id, "–ü–æ —Ç–≤–æ–µ–º—É id –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —è –Ω–∞—à–µ–ª –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è! –≠—Ç–æ –Ω–µ–Ω–æ—Ä–º–∞–ª—å–Ω–æ, –Ω–æ —Ç–≤–æ–µ–π –≤–∏–Ω—ã –∑–¥–µ—Å—å –Ω–µ—Ç.\
–ù–∞–ø–∏—à–∏ /problem –∏ –æ–ø–∏—à–∏ —ç—Ç–æ—Ç —Å–ª—É—á–∞–π(–º–æ–∂–µ—à—å –ø–µ—Ä–µ–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –º–æ–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è). –ò–∑–≤–∏–Ω–∏ –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞ üò¨", parse_mode = "html")
                
        elif db.token.count_documents({"id" : message.chat.id}) == 0:
                db.token.insert_one({"id" : message.chat.id, "token" : []})
                
                inline_item1 = types.InlineKeyboardButton('–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å TOKEN', url = 'https://git.iu7.bmstu.ru/')
                inline_bt1 = types.InlineKeyboardMarkup()
                inline_bt1.add(inline_item1)

                item1 = types.KeyboardButton("–í–≤–æ–¥ TOKEN")
                markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
                markup.add(item1)
                
                bot.send_message(message.chat.id, NameUser +  ", —Ç—ã —É –Ω–∞—Å –≤–ø–µ—Ä–≤—ã–µ, —Ç–≤–æ–π id –±—ã–ª —É–¥–∞—á–Ω–æ –∑–∞–ø–∏—Å–∞–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.", parse_mode = "html", reply_markup = markup)
                
                bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –¥–æ–±–∞–≤–∏–º TOKEN. –ï—Å–ª–∏ —Ç—ã –Ω–µ –∑–Ω–∞–µ—à—å, –≥–¥–µ –µ–≥–æ –Ω–∞–π—Ç–∏, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–æ—á–∫—É ", parse_mode = "html", reply_markup = inline_bt1)
        
@bot.message_handler(commands = ['problem'])
def send_welcome(message):
        global F
        F = 1
        
        st2 = open('qaz/problem.webp', 'rb')
        bot.send_sticker(message.chat.id, st2)

        bot.send_message(message.chat.id, "–¢—ã —É–≤–µ—Ä–µ–Ω??? –ï—Å–ª–∏ —Ç—ã –Ω–∞—à–µ–ª –æ—à–∏–±–∫—É... –ø—Ä–æ—Å—Ç–∏ –Ω–∞—Å üò•", parse_mode = "html")

        bot.send_message(message.chat.id, "–ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏ –ø—Ä–æ–±–ª–µ–º—É, –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –µ–µ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ üò¨\n",\
                         parse_mode = "html", reply_markup = types.ReplyKeyboardRemove())
        
@bot.message_handler(content_types = ['text'])
def dialog(message):
        global Flag, Flagok, F
        
        if message.chat.username == None:
                NameUser = str(message.chat.id)
        else:
                NameUser = "@" + message.chat.username
        
        if message.chat.type == 'private':
                if (message.text == '–í–≤–æ–¥ TOKEN') and (Flag == 1):
                	Flag = 0
                	Flagok = 1
                	
                elif (Flagok == 1):
                        cursor3 = db.token.find_one({"id" : message.chat.id})
                        cur = []
                        cursor4 = dict(cursor3)
                        for j in cursor4["token"]:
                                cur.append(j)
                        cur.append(message.text)
                        
                        db.token.find_one_and_update({"id" : message.chat.id}, {'$set' : {"token" : cur}})

                        bot.send_message(message.chat.id, "–í–∞—à TOKEN –±—ã–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –Ω–∞—à—É –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö üéâ", parse_mode = "html", reply_markup = types.ReplyKeyboardRemove())
                        Flagok = 0
                elif (F == 1):
                        bot.send_message('538587223', "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Å—Ç–∞–≤–∏–≤—à–µ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: " + NameUser + "\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: " + message.text, parse_mode = "html")
                        F = 0
                else:
                        bot.send_message(message.chat.id, '–°—Ç—Ä–∞–Ω–Ω–æ, —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ—Ç...', parse_mode = "html", reply_markup = types.ReplyKeyboardRemove())
                        Flag = 0
                        Flagok = 0

bot.polling()

while True:
        pass


